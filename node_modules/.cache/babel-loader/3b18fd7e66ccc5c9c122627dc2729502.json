{"ast":null,"code":"const CHARTS_KEY = 'tradingviewCharts';\nconst STUDIES_KEY = 'tradingviewStudies'; // See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\n\nexport function getAllCharts() {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  return new Promise(resolve => resolve(charts));\n}\nexport function removeChart(chartId) {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter(chart => chart.id !== chartId);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\n  return new Promise(resolve => resolve());\n}\nexport function saveChart(chartData) {\n  let {\n    content,\n    ...info\n  } = chartData;\n\n  if (!info.id) {\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\n  } // @ts-ignore\n\n\n  info.timestamp = new Date() - 0;\n  content = JSON.parse(content);\n  content['content'] = JSON.parse(content['content']); // Remove \"study_Overlay\" i.e the indexes\n\n  try {\n    for (var i = 0; i < content['content']['charts'][0]['panes'][0]['sources'].length; i++) {\n      if (content['content']['charts'][0]['panes'][0]['sources'][i]['type'] === 'study_Overlay') {\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  content['content'] = JSON.stringify(content['content']);\n  content = JSON.stringify(content); // @ts-ignore\n\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter(chart => chart.id !== info.id);\n  charts.push(info);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\n  return new Promise(resolve => resolve(info.id));\n}\nexport function getChartContent(chartId) {\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\n  return new Promise(resolve => resolve(content));\n}\nexport function getAllStudyTemplates() {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  return new Promise(resolve => resolve(studies));\n}\nexport function removeStudyTemplate({\n  name\n}) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter(study => study.name !== name);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\n  return new Promise(resolve => resolve());\n}\nexport function saveStudyTemplate({\n  content,\n  ...info\n}) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter(study => study.name !== info.name);\n  studies.push(info);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\n  return new Promise(resolve => resolve());\n}\nexport function getStudyTemplateContent({\n  name\n}) {\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\n  return new Promise(resolve => resolve(content));\n}","map":{"version":3,"sources":["/home/dev/Code/dex-ui/src/components/TradingView/saveLoadAdapter.tsx"],"names":["CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","JSON","parse","localStorage","getItem","Promise","resolve","removeChart","chartId","filter","chart","id","setItem","stringify","removeItem","saveChart","chartData","content","info","Math","floor","random","timestamp","Date","i","length","splice","err","console","log","push","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","name","study","saveStudyTemplate","getStudyTemplateContent"],"mappings":"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","sourcesContent":["const CHARTS_KEY = 'tradingviewCharts';\r\nconst STUDIES_KEY = 'tradingviewStudies';\r\n\r\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\r\n\r\nexport function getAllCharts() {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  return new Promise((resolve) => resolve(charts));\r\n}\r\n\r\nexport function removeChart(chartId) {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== chartId);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveChart(chartData) {\r\n  let { content, ...info } = chartData;\r\n  if (!info.id) {\r\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\r\n  }\r\n  // @ts-ignore\r\n  info.timestamp = new Date() - 0;\r\n  content = JSON.parse(content);\r\n  content['content'] = JSON.parse(content['content']);\r\n  // Remove \"study_Overlay\" i.e the indexes\r\n  try {\r\n    for (\r\n      var i = 0;\r\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\r\n      i++\r\n    ) {\r\n      if (\r\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\r\n        'study_Overlay'\r\n      ) {\r\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  content['content'] = JSON.stringify(content['content']);\r\n  content = JSON.stringify(content);\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== info.id);\r\n  charts.push(info);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\r\n\r\n  return new Promise((resolve) => resolve(info.id));\r\n}\r\n\r\nexport function getChartContent(chartId) {\r\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n\r\nexport function getAllStudyTemplates() {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  return new Promise((resolve) => resolve(studies));\r\n}\r\n\r\nexport function removeStudyTemplate({ name }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== name);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveStudyTemplate({ content, ...info }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== info.name);\r\n  studies.push(info);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function getStudyTemplateContent({ name }) {\r\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}