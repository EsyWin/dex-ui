{"ast":null,"code":"// @ts-nocheck\nimport { useMemo } from 'react';\nimport { USE_MARKETS } from './markets';\nimport { sleep } from './utils';\nconst URL_SERVER = 'https://api.raydium.io/v1/dex/tv/';\nexport const useTvDataFeed = () => {\n  return useMemo(() => makeDataFeed(), []);\n};\n\nconst makeDataFeed = () => {\n  let subscriptions = {};\n  const overTime = {};\n  const lastReqTime = {};\n\n  const getApi = async url => {\n    try {\n      const response = await fetch(url);\n\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : responseJson ? responseJson : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Chart API ${url}: ${err}`);\n    }\n\n    return null;\n  };\n\n  return {\n    onReady(callback) {\n      setTimeout(() => callback({\n        supported_resolutions: ['5', '15', '60', '120', '240', '1D' //  '2D', '3D', '5D', '1W', '1M', '2M', '3M', '6M', '12M'\n        ],\n        supports_group_request: false,\n        supports_marks: false,\n        supports_search: false,\n        supports_timescale_marks: false\n      }), 0);\n    },\n\n    async searchSymbol(userInput, exchange, symbolType, onResult) {// const result = await apiGet(`${URL_SERVER}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${1}`);\n      // onResult(result);\n    },\n\n    async resolveSymbol(symbolName, onSymboleResolvedCallback, onResolveErrorCallback, extension) {\n      let fromCustomMarket = false;\n      let customMarket = [];\n\n      try {\n        const customMarketStr = localStorage.getItem('customMarkets');\n        customMarket = customMarketStr !== null ? JSON.parse(customMarketStr) : [];\n      } catch (e) {\n        console.log('error', e);\n      }\n\n      let marketInfo = USE_MARKETS.find(item => item.name === symbolName && !item.deprecated);\n\n      if (!marketInfo) {\n        marketInfo = customMarket.find(item => item.name === symbolName || item.userName === symbolName);\n        fromCustomMarket = true;\n      }\n\n      if (!marketInfo) {\n        return;\n      }\n\n      const result = await getApi(`${URL_SERVER}symbols?market=${marketInfo.address.toString()}`);\n\n      if (!result) {\n        onResolveErrorCallback();\n        return;\n      }\n\n      if (result.name !== marketInfo.name) {\n        if (result.name.includes('unknown')) {\n          result.name = marketInfo.name;\n          result.ticker = marketInfo.name;\n          result.description = marketInfo.name;\n        } else {\n          if (fromCustomMarket) {\n            for (let index = 0; index < customMarket.length; index++) {\n              if (customMarket[index].name === symbolName) {\n                customMarket[index].userName = customMarket[index].name;\n                customMarket[index].name = result.name;\n              }\n            }\n\n            localStorage.setItem('customMarkets', JSON.stringify(customMarket));\n          } else {\n            result.name = marketInfo.name;\n          }\n        }\n      }\n\n      onSymboleResolvedCallback(result);\n    },\n\n    async getBars(symbolInfo, resolution, from, to, onHistoryCallback, onErrorCallback, firstDataRequest) {\n      from = Math.floor(from);\n      to = Math.ceil(to);\n      window.localStorage.setItem('resolution', resolution);\n      resolution = convertResolutionToApi(resolution);\n\n      if (from < minTs(symbolInfo.out_count, resolution)) {\n        onHistoryCallback([], {\n          nodeData: false\n        });\n        return;\n      }\n\n      const key = `${symbolInfo.market}--${resolution}`;\n\n      if (overTime[key] && overTime[key] > from) {\n        onHistoryCallback([], {\n          nodeData: false\n        });\n        return;\n      }\n\n      try {\n        const result = await getApi(`${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolution}&from_time=${from}&to_time=${to}`);\n\n        if (result.c.length === 0) {\n          overTime[key] = to;\n        }\n\n        onHistoryCallback(parseCandles(result), {\n          nodeData: result.length === 0\n        });\n      } catch (err) {\n        onErrorCallback(err);\n      }\n    },\n\n    async subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n      if (subscriptions[subscriberUID]) {\n        subscriptions[subscriberUID].stop();\n        delete subscriptions[subscriberUID];\n      }\n\n      let stopped = false;\n      subscriptions[subscriberUID] = {\n        stop: () => stopped = true\n      };\n\n      while (!stopped) {\n        await sleep(2000);\n\n        for (let i = 0; i < 10; ++i) {\n          if (document.visibilityState !== 'visible') {\n            await sleep(2000);\n          }\n        }\n\n        if (stopped) {\n          return;\n        }\n\n        try {\n          const to = Math.ceil(new Date().getTime() / 1000);\n          const from = reduceTs(to, resolution);\n          const resolutionApi = convertResolutionToApi(resolution);\n\n          if (lastReqTime[subscriberUID] && lastReqTime[subscriberUID] + 1000 * 60 > new Date().getTime()) {\n            continue;\n          }\n\n          lastReqTime[subscriberUID] = new Date().getTime();\n          const candle = await getApi(`${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolutionApi}&from_time=${from}&to_time=${to}`);\n\n          for (const item of parseCandles(candle)) {\n            onRealtimeCallback(item);\n          }\n\n          continue;\n        } catch (e) {\n          console.warn(e);\n          await sleep(10000);\n          continue;\n        }\n      }\n    },\n\n    unsubscribeBars(subscriberUID) {\n      subscriptions[subscriberUID].stop();\n      delete subscriptions[subscriberUID];\n    },\n\n    async searchSymbols(userInput, exchange, symbolType, onResult) {\n      const marketList = USE_MARKETS.filter(item => item.name.includes(userInput) && !item.deprecated);\n      const reList = [];\n      marketList.forEach(item => {\n        reList.push({\n          symbol: item.name,\n          full_name: item.name,\n          description: item.name,\n          exchange: 'Raydium',\n          params: [],\n          type: 'spot',\n          ticker: item.name\n        });\n      });\n\n      if (onResult) {\n        onResult(reList);\n      }\n    }\n\n  };\n};\n\nconst minTs = (minCount, resolutionTv) => {\n  const ts = new Date().getTime() / 1000;\n\n  switch (resolutionTv) {\n    case '1min':\n      return ts - 60 * 1 * minCount;\n\n    case '3min':\n      return ts - 60 * 3 * minCount;\n\n    case '5min':\n      return ts - 60 * 5 * minCount;\n\n    case '15min':\n      return ts - 60 * 15 * minCount;\n\n    case '30min':\n      return ts - 60 * 30 * minCount;\n\n    case '45min':\n      return ts - 60 * 45 * minCount;\n\n    case '1h':\n      return ts - 60 * 60 * minCount;\n\n    case '2h':\n      return ts - 60 * 120 * minCount;\n\n    case '4h':\n      return ts - 60 * 240 * minCount;\n\n    case '12h':\n      return ts - 60 * 720 * minCount;\n\n    case '1d':\n      return ts - 3600 * 24 * minCount;\n\n    case '2d':\n      return ts - 3600 * 24 * 2 * minCount;\n\n    case '3d':\n      return ts - 3600 * 24 * 3 * minCount;\n\n    case '5d':\n      return ts - 3600 * 24 * 5 * minCount;\n\n    case '7d':\n      return ts - 3600 * 24 * 7 * minCount;\n\n    case '1m':\n      return ts - 3600 * 24 * 31 * 1 * minCount;\n\n    case '2m':\n      return ts - 3600 * 24 * 31 * 2 * minCount;\n\n    case '3m':\n      return ts - 3600 * 24 * 31 * 3 * minCount;\n\n    case '6m':\n      return ts - 3600 * 24 * 31 * 6 * minCount;\n\n    case '1y':\n      return ts - 3600 * 24 * 31 * 12 * minCount;\n\n    default:\n      throw Error(`minTs resolution error: ${resolutionTv}`);\n  }\n};\n\nconst reduceTs = (ts, resolutionTv) => {\n  switch (resolutionTv) {\n    case '1':\n      return ts - 60 * 1;\n\n    case '3':\n      return ts - 60 * 3;\n\n    case '5':\n      return ts - 60 * 5;\n\n    case '15':\n      return ts - 60 * 15;\n\n    case '30':\n      return ts - 60 * 30;\n\n    case '45':\n      return ts - 60 * 45;\n\n    case '60':\n      return ts - 60 * 60;\n\n    case '120':\n      return ts - 60 * 120;\n\n    case '240':\n      return ts - 60 * 240;\n\n    case '720':\n      return ts - 60 * 720;\n\n    case '1D':\n      return ts - 3600 * 24;\n\n    case '2D':\n      return ts - 3600 * 24 * 2;\n\n    case '3D':\n      return ts - 3600 * 24 * 3;\n\n    case '5D':\n      return ts - 3600 * 24 * 5;\n\n    case '7D':\n      return ts - 3600 * 24 * 7;\n\n    case '1M':\n      return ts - 3600 * 24 * 31 * 1;\n\n    case '2M':\n      return ts - 3600 * 24 * 31 * 2;\n\n    case '3M':\n      return ts - 3600 * 24 * 31 * 3;\n\n    case '6M':\n      return ts - 3600 * 24 * 31 * 6;\n\n    case '1Y':\n      return ts - 3600 * 24 * 31 * 12;\n\n    default:\n      throw Error(`reduceTs resolution error: ${resolutionTv}`);\n  }\n};\n\nexport const convertResolutionToApi = resolution => {\n  switch (resolution) {\n    case '1':\n      return '1min';\n\n    case '3':\n      return '3min';\n\n    case '5':\n      return '5min';\n\n    case '15':\n      return '15min';\n\n    case '30':\n      return '30min';\n\n    case '45':\n      return '45min';\n\n    case '60':\n      return '1h';\n\n    case '120':\n      return '2h';\n\n    case '240':\n      return '4h';\n\n    case '720':\n      return '12h';\n\n    case '1D':\n      return '1d';\n\n    case '2D':\n      return '2d';\n\n    case '3D':\n      return '3d';\n\n    case '5D':\n      return '5d';\n\n    case '7D':\n      return '7d';\n\n    case '1M':\n      return '1m';\n\n    case '2M':\n      return '2m';\n\n    case '3M':\n      return '3m';\n\n    case '6M':\n      return '6m';\n\n    case '1Y':\n      return '1y';\n\n    default:\n      throw Error(`convertResolutionToApi resolution error: ${resolution}`);\n  }\n};\n\nconst parseCandles = candles => {\n  const result = [];\n\n  for (let i = 0; i < candles.t.length; i++) {\n    result.push({\n      time: candles.t[i] * 1000,\n      close: candles.c[i],\n      open: candles.o[i],\n      high: candles.h[i],\n      low: candles.l[i],\n      volume: candles.v[i]\n    });\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/dev/Code/dex-ui/src/utils/Datafeed.tsx"],"names":["useMemo","USE_MARKETS","sleep","URL_SERVER","useTvDataFeed","makeDataFeed","subscriptions","overTime","lastReqTime","getApi","url","response","fetch","ok","responseJson","json","success","data","err","console","log","onReady","callback","setTimeout","supported_resolutions","supports_group_request","supports_marks","supports_search","supports_timescale_marks","searchSymbol","userInput","exchange","symbolType","onResult","resolveSymbol","symbolName","onSymboleResolvedCallback","onResolveErrorCallback","extension","fromCustomMarket","customMarket","customMarketStr","localStorage","getItem","JSON","parse","e","marketInfo","find","item","name","deprecated","userName","result","address","toString","includes","ticker","description","index","length","setItem","stringify","getBars","symbolInfo","resolution","from","to","onHistoryCallback","onErrorCallback","firstDataRequest","Math","floor","ceil","window","convertResolutionToApi","minTs","out_count","nodeData","key","market","c","parseCandles","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","stop","stopped","i","document","visibilityState","Date","getTime","reduceTs","resolutionApi","candle","warn","unsubscribeBars","searchSymbols","marketList","filter","reList","forEach","push","symbol","full_name","params","type","minCount","resolutionTv","ts","Error","candles","t","time","close","open","o","high","h","low","l","volume","v"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { useMemo } from 'react';\r\nimport { USE_MARKETS } from './markets';\r\nimport { sleep } from './utils';\r\n\r\nconst URL_SERVER = 'https://api.raydium.io/v1/dex/tv/';\r\n\r\nexport const useTvDataFeed = () => {\r\n  return useMemo(() => makeDataFeed(), []);\r\n};\r\n\r\nconst makeDataFeed = () => {\r\n  let subscriptions = {};\r\n  const overTime = {};\r\n  const lastReqTime = {};\r\n\r\n  const getApi = async (url: string) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success\r\n          ? responseJson.data\r\n          : responseJson\r\n          ? responseJson\r\n          : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Chart API ${url}: ${err}`);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return {\r\n    onReady(callback) {\r\n      setTimeout(\r\n        () =>\r\n          callback({\r\n            supported_resolutions: [\r\n              '5',\r\n              '15',\r\n              '60',\r\n              '120',\r\n              '240',\r\n              '1D',\r\n              //  '2D', '3D', '5D', '1W', '1M', '2M', '3M', '6M', '12M'\r\n            ],\r\n            supports_group_request: false,\r\n            supports_marks: false,\r\n            supports_search: false,\r\n            supports_timescale_marks: false,\r\n          }),\r\n        0,\r\n      );\r\n    },\r\n    async searchSymbol(userInput, exchange, symbolType, onResult) {\r\n      // const result = await apiGet(`${URL_SERVER}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${1}`);\r\n      // onResult(result);\r\n    },\r\n    async resolveSymbol(\r\n      symbolName,\r\n      onSymboleResolvedCallback,\r\n      onResolveErrorCallback,\r\n      extension?,\r\n    ) {\r\n      let fromCustomMarket = false;\r\n      let customMarket = [];\r\n      try {\r\n        const customMarketStr = localStorage.getItem('customMarkets');\r\n        customMarket =\r\n          customMarketStr !== null ? JSON.parse(customMarketStr) : [];\r\n      } catch (e) {\r\n        console.log('error', e);\r\n      }\r\n      let marketInfo = USE_MARKETS.find(\r\n        (item) => item.name === symbolName && !item.deprecated,\r\n      );\r\n\r\n      if (!marketInfo) {\r\n        marketInfo = customMarket.find(\r\n          (item) => item.name === symbolName || item.userName === symbolName,\r\n        );\r\n        fromCustomMarket = true;\r\n      }\r\n\r\n      if (!marketInfo) {\r\n        return;\r\n      }\r\n\r\n      const result = await getApi(\r\n        `${URL_SERVER}symbols?market=${marketInfo.address.toString()}`,\r\n      );\r\n      if (!result) {\r\n        onResolveErrorCallback();\r\n        return;\r\n      }\r\n      if (result.name !== marketInfo.name) {\r\n        if (result.name.includes('unknown')) {\r\n          result.name = marketInfo.name;\r\n          result.ticker = marketInfo.name;\r\n          result.description = marketInfo.name;\r\n        } else {\r\n          if (fromCustomMarket) {\r\n            for (let index = 0; index < customMarket.length; index++) {\r\n              if (customMarket[index].name === symbolName) {\r\n                customMarket[index].userName = customMarket[index].name;\r\n                customMarket[index].name = result.name;\r\n              }\r\n            }\r\n            localStorage.setItem('customMarkets', JSON.stringify(customMarket));\r\n          } else {\r\n            result.name = marketInfo.name;\r\n          }\r\n        }\r\n      }\r\n      onSymboleResolvedCallback(result);\r\n    },\r\n    async getBars(\r\n      symbolInfo,\r\n      resolution,\r\n      from,\r\n      to,\r\n      onHistoryCallback,\r\n      onErrorCallback,\r\n      firstDataRequest,\r\n    ) {\r\n      from = Math.floor(from);\r\n      to = Math.ceil(to);\r\n\r\n      window.localStorage.setItem('resolution', resolution);\r\n      resolution = convertResolutionToApi(resolution);\r\n\r\n      if (from < minTs(symbolInfo.out_count, resolution)) {\r\n        onHistoryCallback([], { nodeData: false });\r\n        return;\r\n      }\r\n\r\n      const key = `${symbolInfo.market}--${resolution}`;\r\n\r\n      if (overTime[key] && overTime[key] > from) {\r\n        onHistoryCallback([], { nodeData: false });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const result = await getApi(\r\n          `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolution}&from_time=${from}&to_time=${to}`,\r\n        );\r\n\r\n        if (result.c.length === 0) {\r\n          overTime[key] = to;\r\n        }\r\n\r\n        onHistoryCallback(parseCandles(result), {\r\n          nodeData: result.length === 0,\r\n        });\r\n      } catch (err) {\r\n        onErrorCallback(err);\r\n      }\r\n    },\r\n    async subscribeBars(\r\n      symbolInfo,\r\n      resolution,\r\n      onRealtimeCallback,\r\n      subscriberUID,\r\n      onResetCacheNeededCallback,\r\n    ) {\r\n      if (subscriptions[subscriberUID]) {\r\n        subscriptions[subscriberUID].stop();\r\n        delete subscriptions[subscriberUID];\r\n      }\r\n\r\n      let stopped = false;\r\n      subscriptions[subscriberUID] = { stop: () => (stopped = true) };\r\n\r\n      while (!stopped) {\r\n        await sleep(2000);\r\n        for (let i = 0; i < 10; ++i) {\r\n          if (document.visibilityState !== 'visible') {\r\n            await sleep(2000);\r\n          }\r\n        }\r\n        if (stopped) {\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const to = Math.ceil(new Date().getTime() / 1000);\r\n          const from = reduceTs(to, resolution);\r\n\r\n          const resolutionApi = convertResolutionToApi(resolution);\r\n\r\n          if (\r\n            lastReqTime[subscriberUID] &&\r\n            lastReqTime[subscriberUID] + 1000 * 60 > new Date().getTime()\r\n          ) {\r\n            continue;\r\n          }\r\n          lastReqTime[subscriberUID] = new Date().getTime();\r\n\r\n          const candle = await getApi(\r\n            `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolutionApi}&from_time=${from}&to_time=${to}`,\r\n          );\r\n\r\n          for (const item of parseCandles(candle)) {\r\n            onRealtimeCallback(item);\r\n          }\r\n          continue;\r\n        } catch (e) {\r\n          console.warn(e);\r\n          await sleep(10000);\r\n          continue;\r\n        }\r\n      }\r\n    },\r\n    unsubscribeBars(subscriberUID) {\r\n      subscriptions[subscriberUID].stop();\r\n      delete subscriptions[subscriberUID];\r\n    },\r\n    async searchSymbols(\r\n      userInput: string,\r\n      exchange: string,\r\n      symbolType: string,\r\n      onResult: SearchSymbolsCallback,\r\n    ) {\r\n      const marketList: any[] = USE_MARKETS.filter(\r\n        (item) => item.name.includes(userInput) && !item.deprecated,\r\n      );\r\n      const reList = [];\r\n      marketList.forEach((item) => {\r\n        reList.push({\r\n          symbol: item.name,\r\n          full_name: item.name,\r\n          description: item.name,\r\n          exchange: 'Raydium',\r\n          params: [],\r\n          type: 'spot',\r\n          ticker: item.name,\r\n        });\r\n      });\r\n      if (onResult) {\r\n        onResult(reList);\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nconst minTs = (minCount: number, resolutionTv: string) => {\r\n  const ts = new Date().getTime() / 1000;\r\n  switch (resolutionTv) {\r\n    case '1min':\r\n      return ts - 60 * 1 * minCount;\r\n    case '3min':\r\n      return ts - 60 * 3 * minCount;\r\n    case '5min':\r\n      return ts - 60 * 5 * minCount;\r\n    case '15min':\r\n      return ts - 60 * 15 * minCount;\r\n    case '30min':\r\n      return ts - 60 * 30 * minCount;\r\n    case '45min':\r\n      return ts - 60 * 45 * minCount;\r\n    case '1h':\r\n      return ts - 60 * 60 * minCount;\r\n    case '2h':\r\n      return ts - 60 * 120 * minCount;\r\n    case '4h':\r\n      return ts - 60 * 240 * minCount;\r\n    case '12h':\r\n      return ts - 60 * 720 * minCount;\r\n    case '1d':\r\n      return ts - 3600 * 24 * minCount;\r\n    case '2d':\r\n      return ts - 3600 * 24 * 2 * minCount;\r\n    case '3d':\r\n      return ts - 3600 * 24 * 3 * minCount;\r\n    case '5d':\r\n      return ts - 3600 * 24 * 5 * minCount;\r\n    case '7d':\r\n      return ts - 3600 * 24 * 7 * minCount;\r\n    case '1m':\r\n      return ts - 3600 * 24 * 31 * 1 * minCount;\r\n    case '2m':\r\n      return ts - 3600 * 24 * 31 * 2 * minCount;\r\n    case '3m':\r\n      return ts - 3600 * 24 * 31 * 3 * minCount;\r\n    case '6m':\r\n      return ts - 3600 * 24 * 31 * 6 * minCount;\r\n    case '1y':\r\n      return ts - 3600 * 24 * 31 * 12 * minCount;\r\n    default:\r\n      throw Error(`minTs resolution error: ${resolutionTv}`);\r\n  }\r\n};\r\n\r\nconst reduceTs = (ts: number, resolutionTv: string) => {\r\n  switch (resolutionTv) {\r\n    case '1':\r\n      return ts - 60 * 1;\r\n    case '3':\r\n      return ts - 60 * 3;\r\n    case '5':\r\n      return ts - 60 * 5;\r\n    case '15':\r\n      return ts - 60 * 15;\r\n    case '30':\r\n      return ts - 60 * 30;\r\n    case '45':\r\n      return ts - 60 * 45;\r\n    case '60':\r\n      return ts - 60 * 60;\r\n    case '120':\r\n      return ts - 60 * 120;\r\n    case '240':\r\n      return ts - 60 * 240;\r\n    case '720':\r\n      return ts - 60 * 720;\r\n    case '1D':\r\n      return ts - 3600 * 24;\r\n    case '2D':\r\n      return ts - 3600 * 24 * 2;\r\n    case '3D':\r\n      return ts - 3600 * 24 * 3;\r\n    case '5D':\r\n      return ts - 3600 * 24 * 5;\r\n    case '7D':\r\n      return ts - 3600 * 24 * 7;\r\n    case '1M':\r\n      return ts - 3600 * 24 * 31 * 1;\r\n    case '2M':\r\n      return ts - 3600 * 24 * 31 * 2;\r\n    case '3M':\r\n      return ts - 3600 * 24 * 31 * 3;\r\n    case '6M':\r\n      return ts - 3600 * 24 * 31 * 6;\r\n    case '1Y':\r\n      return ts - 3600 * 24 * 31 * 12;\r\n    default:\r\n      throw Error(`reduceTs resolution error: ${resolutionTv}`);\r\n  }\r\n};\r\n\r\nexport const convertResolutionToApi = (resolution: string) => {\r\n  switch (resolution) {\r\n    case '1':\r\n      return '1min';\r\n    case '3':\r\n      return '3min';\r\n    case '5':\r\n      return '5min';\r\n    case '15':\r\n      return '15min';\r\n    case '30':\r\n      return '30min';\r\n    case '45':\r\n      return '45min';\r\n    case '60':\r\n      return '1h';\r\n    case '120':\r\n      return '2h';\r\n    case '240':\r\n      return '4h';\r\n    case '720':\r\n      return '12h';\r\n    case '1D':\r\n      return '1d';\r\n    case '2D':\r\n      return '2d';\r\n    case '3D':\r\n      return '3d';\r\n    case '5D':\r\n      return '5d';\r\n    case '7D':\r\n      return '7d';\r\n    case '1M':\r\n      return '1m';\r\n    case '2M':\r\n      return '2m';\r\n    case '3M':\r\n      return '3m';\r\n    case '6M':\r\n      return '6m';\r\n    case '1Y':\r\n      return '1y';\r\n    default:\r\n      throw Error(`convertResolutionToApi resolution error: ${resolution}`);\r\n  }\r\n};\r\n\r\ninterface rawCandles {\r\n  s: string;\r\n  c: Array<number>;\r\n  o: Array<number>;\r\n  l: Array<number>;\r\n  h: Array<number>;\r\n  t: Array<number>;\r\n  v: Array<number>;\r\n}\r\n\r\ninterface bar {\r\n  time: number;\r\n  close: number;\r\n  open: number;\r\n  low: number;\r\n  high: number;\r\n  volume: number;\r\n}\r\n\r\nconst parseCandles = (candles: rawCandles) => {\r\n  const result: Array<bar> = [];\r\n  for (let i = 0; i < candles.t.length; i++) {\r\n    result.push({\r\n      time: candles.t[i] * 1000,\r\n      close: candles.c[i],\r\n      open: candles.o[i],\r\n      high: candles.h[i],\r\n      low: candles.l[i],\r\n      volume: candles.v[i],\r\n    });\r\n  }\r\n  return result;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}