{"ast":null,"code":"var _jsxFileName = \"/home/dev/Code/dex-ui/src/pages/pools/PoolPage/PoolBasketDisplay.tsx\";\nimport React from 'react';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket\n}) {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, poolInfo.state.assets.map((asset, index) => /*#__PURE__*/React.createElement(BasketItem, {\n    key: index,\n    mint: asset.mint,\n    quantity: basket === null || basket === void 0 ? void 0 : basket.quantities[index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction BasketItem({\n  mint,\n  quantity\n}) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = /*#__PURE__*/React.createElement(Spin, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  });\n\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = /*#__PURE__*/React.createElement(React.Fragment, null, quantity.toNumber() / 10 ** mintInfo.decimals);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, quantityDisplay, \" \", /*#__PURE__*/React.createElement(MintName, {\n    mint: mint,\n    showAddress: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dev/Code/dex-ui/src/pages/pools/PoolPage/PoolBasketDisplay.tsx"],"names":["React","useAccountInfo","parseTokenMintData","Spin","MintName","PoolBasketDisplay","poolInfo","basket","state","assets","map","asset","index","mint","quantities","BasketItem","quantity","mintAccountInfo","quantityDisplay","mintInfo","data","toNumber","decimals"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAOA,eAAe,SAASC,iBAAT,CAA2B;AACxCC,EAAAA,QADwC;AAExCC,EAAAA;AAFwC,CAA3B,EAGQ;AACrB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,GAAtB,CAA0B,CAACC,KAAD,EAAQC,KAAR,kBACzB,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,IAAA,QAAQ,EAAEN,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEO,UAAR,CAAmBF,KAAnB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAWD;;AAOD,SAASG,UAAT,CAAoB;AAAEF,EAAAA,IAAF;AAAQG,EAAAA;AAAR,CAApB,EAAyD;AACvD,QAAM,CAACC,eAAD,IAAoBhB,cAAc,CAACY,IAAD,CAAxC;AACA,MAAIK,eAAe,gBAAG,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB;;AACA,MAAID,eAAe,IAAID,QAAvB,EAAiC;AAC/B,UAAMG,QAAQ,GAAGjB,kBAAkB,CAACe,eAAe,CAACG,IAAjB,CAAnC;AACAF,IAAAA,eAAe,gBAAG,0CAAGF,QAAQ,CAACK,QAAT,KAAsB,MAAMF,QAAQ,CAACG,QAAxC,CAAlB;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,eADH,oBACoB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEL,IAAhB;AAAsB,IAAA,WAAW,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,CADF;AAKD","sourcesContent":["import { Basket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport BN from 'bn.js';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport { Spin } from 'antd';\r\nimport { MintName } from '../../../components/MintName';\r\n\r\ninterface BasketDisplayProps {\r\n  poolInfo: PoolInfo;\r\n  basket?: Basket | null | undefined;\r\n}\r\n\r\nexport default function PoolBasketDisplay({\r\n  poolInfo,\r\n  basket,\r\n}: BasketDisplayProps) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => (\r\n        <BasketItem\r\n          key={index}\r\n          mint={asset.mint}\r\n          quantity={basket?.quantities[index]}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BasketItemProps {\r\n  mint: PublicKey;\r\n  quantity?: BN;\r\n}\r\n\r\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && quantity) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay} <MintName mint={mint} showAddress />\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}