{"ast":null,"code":"var _jsxFileName = \"/home/dev/Code/dex-ui/src/utils/wallet.tsx\";\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { Button, Modal } from 'antd';\nimport { LedgerWalletAdapter, PhantomWalletAdapter, SolletExtensionAdapter, MathWalletAdapter, SolflareExtensionWalletAdapter } from '../wallet-adapters';\nconst ASSET_URL = 'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\nexport const WALLET_PROVIDERS = [{\n  name: 'sollet.io',\n  url: 'https://www.sollet.io',\n  icon: `${ASSET_URL}/sollet.svg`\n}, {\n  name: 'Sollet Extension',\n  url: 'https://www.sollet.io/extension',\n  icon: `${ASSET_URL}/sollet.svg`,\n  adapter: SolletExtensionAdapter\n}, {\n  name: 'Ledger',\n  url: 'https://www.ledger.com',\n  icon: `${ASSET_URL}/ledger.svg`,\n  adapter: LedgerWalletAdapter\n}, {\n  name: 'Solflare',\n  url: 'https://solflare.com/access-wallet',\n  icon: `${ASSET_URL}/solflare.svg`\n}, {\n  name: 'Solflare Extension',\n  url: 'https://solflare.com',\n  icon: `${ASSET_URL}/solflare.svg`,\n  adapter: SolflareExtensionWalletAdapter\n}, {\n  name: 'Phantom',\n  url: 'https://www.phantom.app',\n  icon: `https://www.phantom.app/img/logo.png`,\n  adapter: PhantomWalletAdapter\n}, {\n  name: 'MathWallet',\n  url: 'https://www.mathwallet.org',\n  icon: `${ASSET_URL}/mathwallet.svg`,\n  adapter: MathWalletAdapter\n}];\nconst WalletContext = React.createContext(null);\nexport function WalletProvider({\n  children\n}) {\n  var _WALLET_PROVIDERS$fin, _WALLET_PROVIDERS$fin2;\n\n  const {\n    endpoint\n  } = useConnectionConfig();\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\n  const provider = useMemo(() => WALLET_PROVIDERS.find(({\n    url\n  }) => url === providerUrl), [providerUrl]);\n  let [wallet, setWallet] = useState(undefined);\n  useEffect(() => {\n    if (provider) {\n      const updateWallet = () => {\n        // hack to also update wallet synchronously in case it disconnects\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        wallet = new (provider.adapter || Wallet)(providerUrl, endpoint);\n        setWallet(wallet);\n      };\n\n      if (document.readyState !== 'complete') {\n        // wait to ensure that browser extensions are loaded\n        const listener = () => {\n          updateWallet();\n          window.removeEventListener('load', listener);\n        };\n\n        window.addEventListener('load', listener);\n        return () => window.removeEventListener('load', listener);\n      } else {\n        updateWallet();\n      }\n    }\n  }, [provider, providerUrl, endpoint]);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    if (wallet) {\n      wallet.on('connect', () => {\n        var _wallet;\n\n        if ((_wallet = wallet) === null || _wallet === void 0 ? void 0 : _wallet.publicKey) {\n          console.log('connected');\n          localStorage.removeItem('feeDiscountKey');\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay = walletPublicKey.length > 20 ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(walletPublicKey.length - 7, walletPublicKey.length)}` : walletPublicKey;\n          notify({\n            message: 'Wallet update',\n            description: 'Connected to wallet ' + keyToDisplay\n          });\n        }\n      });\n      wallet.on('disconnect', () => {\n        setConnected(false);\n        notify({\n          message: 'Wallet update',\n          description: 'Disconnected from wallet'\n        });\n        localStorage.removeItem('feeDiscountKey');\n      });\n    }\n\n    return () => {\n      setConnected(false);\n\n      if (wallet && wallet.connected) {\n        wallet.disconnect();\n        setConnected(false);\n      }\n    };\n  }, [wallet]);\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n  return /*#__PURE__*/React.createElement(WalletContext.Provider, {\n    value: {\n      wallet,\n      connected,\n      select,\n      providerUrl,\n      setProviderUrl,\n      providerName: (_WALLET_PROVIDERS$fin = (_WALLET_PROVIDERS$fin2 = WALLET_PROVIDERS.find(({\n        url\n      }) => url === providerUrl)) === null || _WALLET_PROVIDERS$fin2 === void 0 ? void 0 : _WALLET_PROVIDERS$fin2.name) !== null && _WALLET_PROVIDERS$fin !== void 0 ? _WALLET_PROVIDERS$fin : providerUrl\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(Modal, {\n    title: \"Select Wallet\",\n    okText: \"Connect\",\n    visible: isModalVisible,\n    okButtonProps: {\n      style: {\n        display: 'none'\n      }\n    },\n    onCancel: close,\n    width: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, WALLET_PROVIDERS.map(provider => {\n    const onClick = function () {\n      setProviderUrl(provider.url);\n      setAutoConnect(true);\n      close();\n    };\n\n    return /*#__PURE__*/React.createElement(Button, {\n      key: provider.name,\n      size: \"large\",\n      type: providerUrl === provider.url ? 'primary' : 'ghost',\n      onClick: onClick,\n      icon: /*#__PURE__*/React.createElement(\"img\", {\n        alt: `${provider.name}`,\n        width: 20,\n        height: 20,\n        src: provider.icon,\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }),\n      style: {\n        display: 'block',\n        width: '100%',\n        textAlign: 'left',\n        marginBottom: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, provider.name);\n  })));\n}\nexport function useWallet() {\n  const context = useContext(WalletContext);\n\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n\n  const wallet = context.wallet;\n  return {\n    connected: context.connected,\n    wallet: wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n    select: context.select,\n\n    connect() {\n      wallet ? wallet.connect() : context.select();\n    },\n\n    disconnect() {\n      wallet === null || wallet === void 0 ? void 0 : wallet.disconnect();\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/dev/Code/dex-ui/src/utils/wallet.tsx"],"names":["React","useCallback","useContext","useEffect","useMemo","useState","Wallet","notify","useConnectionConfig","useLocalStorageState","Button","Modal","LedgerWalletAdapter","PhantomWalletAdapter","SolletExtensionAdapter","MathWalletAdapter","SolflareExtensionWalletAdapter","ASSET_URL","WALLET_PROVIDERS","name","url","icon","adapter","WalletContext","createContext","WalletProvider","children","endpoint","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","find","wallet","setWallet","undefined","updateWallet","document","readyState","listener","window","removeEventListener","addEventListener","connected","setConnected","on","publicKey","console","log","localStorage","removeItem","walletPublicKey","toBase58","keyToDisplay","length","substring","message","description","disconnect","connect","isModalVisible","setIsModalVisible","select","close","providerName","style","display","map","onClick","marginRight","width","textAlign","marginBottom","useWallet","context","Error","setProvider"],"mappings":";AAAA,OAAOA,KAAP,IACEC,WADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,OAJF,EAKEC,QALF,QAMO,OANP;AAOA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAEEC,mBAFF,EAGEC,oBAHF,EAIEC,sBAJF,EAKEC,iBALF,EAMEC,8BANF,QAOO,oBAPP;AASA,MAAMC,SAAS,GACb,oEADF;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAC9B;AACEC,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,GAAG,EAAE,uBAFP;AAGEC,EAAAA,IAAI,EAAG,GAAEJ,SAAU;AAHrB,CAD8B,EAM9B;AACEE,EAAAA,IAAI,EAAE,kBADR;AAEEC,EAAAA,GAAG,EAAE,iCAFP;AAGEC,EAAAA,IAAI,EAAG,GAAEJ,SAAU,aAHrB;AAIEK,EAAAA,OAAO,EAAER;AAJX,CAN8B,EAY9B;AACEK,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,GAAG,EAAE,wBAFP;AAGEC,EAAAA,IAAI,EAAG,GAAEJ,SAAU,aAHrB;AAIEK,EAAAA,OAAO,EAAEV;AAJX,CAZ8B,EAkB9B;AACEO,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,GAAG,EAAE,oCAFP;AAGEC,EAAAA,IAAI,EAAG,GAAEJ,SAAU;AAHrB,CAlB8B,EAuB9B;AACEE,EAAAA,IAAI,EAAE,oBADR;AAEEC,EAAAA,GAAG,EAAE,sBAFP;AAGEC,EAAAA,IAAI,EAAG,GAAEJ,SAAU,eAHrB;AAIEK,EAAAA,OAAO,EAAEN;AAJX,CAvB8B,EA6B9B;AACEG,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,GAAG,EAAE,yBAFP;AAGEC,EAAAA,IAAI,EAAG,sCAHT;AAIEC,EAAAA,OAAO,EAAET;AAJX,CA7B8B,EAmC9B;AACEM,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,GAAG,EAAE,4BAFP;AAGEC,EAAAA,IAAI,EAAG,GAAEJ,SAAU,iBAHrB;AAIEK,EAAAA,OAAO,EAAEP;AAJX,CAnC8B,CAAzB;AA2CP,MAAMQ,aAAa,GAAGvB,KAAK,CAACwB,aAAN,CAAgD,IAAhD,CAAtB;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAenB,mBAAmB,EAAxC;AAEA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgCtB,oBAAoB,CAAC,gBAAD,CAA1D;AAEA,QAAMuB,QAAQ,GAAG5B,OAAO,CACtB,MAAMc,gBAAgB,CAACe,IAAjB,CAAsB,CAAC;AAAEb,IAAAA;AAAF,GAAD,KAAaA,GAAG,KAAKU,WAA3C,CADgB,EAEtB,CAACA,WAAD,CAFsB,CAAxB;AAKA,MAAI,CAACI,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAA4B+B,SAA5B,CAAlC;AAEAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAJ,EAAc;AACZ,YAAMK,YAAY,GAAG,MAAM;AACzB;AACA;AACAH,QAAAA,MAAM,GAAG,KAAKF,QAAQ,CAACV,OAAT,IAAoBhB,MAAzB,EACPwB,WADO,EAEPH,QAFO,CAAT;AAIAQ,QAAAA,SAAS,CAACD,MAAD,CAAT;AACD,OARD;;AAUA,UAAII,QAAQ,CAACC,UAAT,KAAwB,UAA5B,EAAwC;AACtC;AACA,cAAMC,QAAQ,GAAG,MAAM;AACrBH,UAAAA,YAAY;AACZI,UAAAA,MAAM,CAACC,mBAAP,CAA2B,MAA3B,EAAmCF,QAAnC;AACD,SAHD;;AAIAC,QAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgCH,QAAhC;AACA,eAAO,MAAMC,MAAM,CAACC,mBAAP,CAA2B,MAA3B,EAAmCF,QAAnC,CAAb;AACD,OARD,MAQO;AACLH,QAAAA,YAAY;AACb;AACF;AACF,GAxBQ,EAwBN,CAACL,QAAD,EAAWF,WAAX,EAAwBH,QAAxB,CAxBM,CAAT;AA0BA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,KAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAqB,MAAM;AAAA;;AACzB,uBAAIZ,MAAJ,4CAAI,QAAQa,SAAZ,EAAuB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,UAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAN,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMO,eAAe,GAAGlB,MAAM,CAACa,SAAP,CAAiBM,QAAjB,EAAxB;AACA,gBAAMC,YAAY,GAChBF,eAAe,CAACG,MAAhB,GAAyB,EAAzB,GACK,GAAEH,eAAe,CAACI,SAAhB,CACD,CADC,EAED,CAFC,CAGD,QAAOJ,eAAe,CAACI,SAAhB,CACPJ,eAAe,CAACG,MAAhB,GAAyB,CADlB,EAEPH,eAAe,CAACG,MAFT,CAGP,EAPN,GAQIH,eATN;AAWA7C,UAAAA,MAAM,CAAC;AACLkD,YAAAA,OAAO,EAAE,eADJ;AAELC,YAAAA,WAAW,EAAE,yBAAyBJ;AAFjC,WAAD,CAAN;AAID;AACF,OAtBD;AAwBApB,MAAAA,MAAM,CAACY,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BD,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAtC,QAAAA,MAAM,CAAC;AACLkD,UAAAA,OAAO,EAAE,eADJ;AAELC,UAAAA,WAAW,EAAE;AAFR,SAAD,CAAN;AAIAR,QAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACD,OAPD;AAQD;;AAED,WAAO,MAAM;AACXN,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAIX,MAAM,IAAIA,MAAM,CAACU,SAArB,EAAgC;AAC9BV,QAAAA,MAAM,CAACyB,UAAP;AACAd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAND;AAOD,GA3CQ,EA2CN,CAACX,MAAD,CA3CM,CAAT;AA6CA/B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,MAAM,IAAIN,WAAd,EAA2B;AACzBM,MAAAA,MAAM,CAAC0B,OAAP;AACA/B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAED,WAAO,MAAM,CAAE,CAAf;AACD,GAPQ,EAON,CAACK,MAAD,EAASN,WAAT,CAPM,CAAT;AASA,QAAM,CAACiC,cAAD,EAAiBC,iBAAjB,IAAsCzD,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM0D,MAAM,GAAG9D,WAAW,CAAC,MAAM6D,iBAAiB,CAAC,IAAD,CAAxB,EAAgC,EAAhC,CAA1B;AACA,QAAME,KAAK,GAAG/D,WAAW,CAAC,MAAM6D,iBAAiB,CAAC,KAAD,CAAxB,EAAiC,EAAjC,CAAzB;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACL5B,MAAAA,MADK;AAELU,MAAAA,SAFK;AAGLmB,MAAAA,MAHK;AAILjC,MAAAA,WAJK;AAKLC,MAAAA,cALK;AAMLkC,MAAAA,YAAY,qDACV/C,gBAAgB,CAACe,IAAjB,CAAsB,CAAC;AAAEb,QAAAA;AAAF,OAAD,KAAaA,GAAG,KAAKU,WAA3C,CADU,2DACV,uBAAyDX,IAD/C,yEAEVW;AARG,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGJ,QAZH,eAaE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,OAAO,EAAEmC,cAHX;AAIE,IAAA,aAAa,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAT,KAJjB;AAKE,IAAA,QAAQ,EAAEH,KALZ;AAME,IAAA,KAAK,EAAE,GANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG9C,gBAAgB,CAACkD,GAAjB,CAAsBpC,QAAD,IAAc;AAClC,UAAMqC,OAAO,GAAG,YAAY;AAC1BtC,MAAAA,cAAc,CAACC,QAAQ,CAACZ,GAAV,CAAd;AACAS,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAmC,MAAAA,KAAK;AACN,KAJD;;AAMA,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEhC,QAAQ,CAACb,IADhB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAEW,WAAW,KAAKE,QAAQ,CAACZ,GAAzB,GAA+B,SAA/B,GAA2C,OAHnD;AAIE,MAAA,OAAO,EAAEiD,OAJX;AAKE,MAAA,IAAI,eACF;AACE,QAAA,GAAG,EAAG,GAAErC,QAAQ,CAACb,IAAK,EADxB;AAEE,QAAA,KAAK,EAAE,EAFT;AAGE,QAAA,MAAM,EAAE,EAHV;AAIE,QAAA,GAAG,EAAEa,QAAQ,CAACX,IAJhB;AAKE,QAAA,KAAK,EAAE;AAAEiD,UAAAA,WAAW,EAAE;AAAf,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ;AAcE,MAAA,KAAK,EAAE;AACLH,QAAAA,OAAO,EAAE,OADJ;AAELI,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,SAAS,EAAE,MAHN;AAILC,QAAAA,YAAY,EAAE;AAJT,OAdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqBGzC,QAAQ,CAACb,IArBZ,CADF;AAyBD,GAhCA,CARH,CAbF,CADF;AA0DD;AAED,OAAO,SAASuD,SAAT,GAAqB;AAC1B,QAAMC,OAAO,GAAGzE,UAAU,CAACqB,aAAD,CAA1B;;AACA,MAAI,CAACoD,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,QAAM1C,MAAM,GAAGyC,OAAO,CAACzC,MAAvB;AACA,SAAO;AACLU,IAAAA,SAAS,EAAE+B,OAAO,CAAC/B,SADd;AAELV,IAAAA,MAAM,EAAEA,MAFH;AAGLJ,IAAAA,WAAW,EAAE6C,OAAO,CAAC7C,WAHhB;AAIL+C,IAAAA,WAAW,EAAEF,OAAO,CAAC5C,cAJhB;AAKLkC,IAAAA,YAAY,EAAEU,OAAO,CAACV,YALjB;AAMLF,IAAAA,MAAM,EAAEY,OAAO,CAACZ,MANX;;AAOLH,IAAAA,OAAO,GAAG;AACR1B,MAAAA,MAAM,GAAGA,MAAM,CAAC0B,OAAP,EAAH,GAAsBe,OAAO,CAACZ,MAAR,EAA5B;AACD,KATI;;AAULJ,IAAAA,UAAU,GAAG;AACXzB,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEyB,UAAR;AACD;;AAZI,GAAP;AAcD","sourcesContent":["import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from './notifications';\r\nimport { useConnectionConfig } from './connection';\r\nimport { useLocalStorageState } from './utils';\r\nimport { WalletContextValues } from './types';\r\nimport { Button, Modal } from 'antd';\r\nimport {\r\n  WalletAdapter,\r\n  LedgerWalletAdapter,\r\n  PhantomWalletAdapter,\r\n  SolletExtensionAdapter,\r\n  MathWalletAdapter,\r\n  SolflareExtensionWalletAdapter,\r\n} from '../wallet-adapters';\r\n\r\nconst ASSET_URL =\r\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\r\nexport const WALLET_PROVIDERS = [\r\n  {\r\n    name: 'sollet.io',\r\n    url: 'https://www.sollet.io',\r\n    icon: `${ASSET_URL}/sollet.svg`,\r\n  },\r\n  {\r\n    name: 'Sollet Extension',\r\n    url: 'https://www.sollet.io/extension',\r\n    icon: `${ASSET_URL}/sollet.svg`,\r\n    adapter: SolletExtensionAdapter as any,\r\n  },\r\n  {\r\n    name: 'Ledger',\r\n    url: 'https://www.ledger.com',\r\n    icon: `${ASSET_URL}/ledger.svg`,\r\n    adapter: LedgerWalletAdapter,\r\n  },\r\n  {\r\n    name: 'Solflare',\r\n    url: 'https://solflare.com/access-wallet',\r\n    icon: `${ASSET_URL}/solflare.svg`,\r\n  },\r\n  {\r\n    name: 'Solflare Extension',\r\n    url: 'https://solflare.com',\r\n    icon: `${ASSET_URL}/solflare.svg`,\r\n    adapter: SolflareExtensionWalletAdapter,\r\n  },\r\n  {\r\n    name: 'Phantom',\r\n    url: 'https://www.phantom.app',\r\n    icon: `https://www.phantom.app/img/logo.png`,\r\n    adapter: PhantomWalletAdapter,\r\n  },\r\n  {\r\n    name: 'MathWallet',\r\n    url: 'https://www.mathwallet.org',\r\n    icon: `${ASSET_URL}/mathwallet.svg`,\r\n    adapter: MathWalletAdapter,\r\n  },\r\n];\r\n\r\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const { endpoint } = useConnectionConfig();\r\n\r\n  const [autoConnect, setAutoConnect] = useState(false);\r\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\r\n\r\n  const provider = useMemo(\r\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\r\n    [providerUrl],\r\n  );\r\n\r\n  let [wallet, setWallet] = useState<WalletAdapter | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      const updateWallet = () => {\r\n        // hack to also update wallet synchronously in case it disconnects\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        wallet = new (provider.adapter || Wallet)(\r\n          providerUrl,\r\n          endpoint,\r\n        ) as WalletAdapter;\r\n        setWallet(wallet);\r\n      };\r\n\r\n      if (document.readyState !== 'complete') {\r\n        // wait to ensure that browser extensions are loaded\r\n        const listener = () => {\r\n          updateWallet();\r\n          window.removeEventListener('load', listener);\r\n        };\r\n        window.addEventListener('load', listener);\r\n        return () => window.removeEventListener('load', listener);\r\n      } else {\r\n        updateWallet();\r\n      }\r\n    }\r\n  }, [provider, providerUrl, endpoint]);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      wallet.on('connect', () => {\r\n        if (wallet?.publicKey) {\r\n          console.log('connected');\r\n          localStorage.removeItem('feeDiscountKey');\r\n          setConnected(true);\r\n          const walletPublicKey = wallet.publicKey.toBase58();\r\n          const keyToDisplay =\r\n            walletPublicKey.length > 20\r\n              ? `${walletPublicKey.substring(\r\n                  0,\r\n                  7,\r\n                )}.....${walletPublicKey.substring(\r\n                  walletPublicKey.length - 7,\r\n                  walletPublicKey.length,\r\n                )}`\r\n              : walletPublicKey;\r\n\r\n          notify({\r\n            message: 'Wallet update',\r\n            description: 'Connected to wallet ' + keyToDisplay,\r\n          });\r\n        }\r\n      });\r\n\r\n      wallet.on('disconnect', () => {\r\n        setConnected(false);\r\n        notify({\r\n          message: 'Wallet update',\r\n          description: 'Disconnected from wallet',\r\n        });\r\n        localStorage.removeItem('feeDiscountKey');\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      setConnected(false);\r\n      if (wallet && wallet.connected) {\r\n        wallet.disconnect();\r\n        setConnected(false);\r\n      }\r\n    };\r\n  }, [wallet]);\r\n\r\n  useEffect(() => {\r\n    if (wallet && autoConnect) {\r\n      wallet.connect();\r\n      setAutoConnect(false);\r\n    }\r\n\r\n    return () => {};\r\n  }, [wallet, autoConnect]);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const select = useCallback(() => setIsModalVisible(true), []);\r\n  const close = useCallback(() => setIsModalVisible(false), []);\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        connected,\r\n        select,\r\n        providerUrl,\r\n        setProviderUrl,\r\n        providerName:\r\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n          providerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n      <Modal\r\n        title=\"Select Wallet\"\r\n        okText=\"Connect\"\r\n        visible={isModalVisible}\r\n        okButtonProps={{ style: { display: 'none' } }}\r\n        onCancel={close}\r\n        width={400}\r\n      >\r\n        {WALLET_PROVIDERS.map((provider) => {\r\n          const onClick = function () {\r\n            setProviderUrl(provider.url);\r\n            setAutoConnect(true);\r\n            close();\r\n          };\r\n\r\n          return (\r\n            <Button\r\n              key={provider.name}\r\n              size=\"large\"\r\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\r\n              onClick={onClick}\r\n              icon={\r\n                <img\r\n                  alt={`${provider.name}`}\r\n                  width={20}\r\n                  height={20}\r\n                  src={provider.icon}\r\n                  style={{ marginRight: 8 }}\r\n                />\r\n              }\r\n              style={{\r\n                display: 'block',\r\n                width: '100%',\r\n                textAlign: 'left',\r\n                marginBottom: 8,\r\n              }}\r\n            >\r\n              {provider.name}\r\n            </Button>\r\n          );\r\n        })}\r\n      </Modal>\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context');\r\n  }\r\n\r\n  const wallet = context.wallet;\r\n  return {\r\n    connected: context.connected,\r\n    wallet: wallet,\r\n    providerUrl: context.providerUrl,\r\n    setProvider: context.setProviderUrl,\r\n    providerName: context.providerName,\r\n    select: context.select,\r\n    connect() {\r\n      wallet ? wallet.connect() : context.select();\r\n    },\r\n    disconnect() {\r\n      wallet?.disconnect();\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}