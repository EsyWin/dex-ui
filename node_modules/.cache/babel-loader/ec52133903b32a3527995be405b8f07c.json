{"ast":null,"code":"var _jsxFileName = \"/home/dev/Code/dex-ui/src/components/UserInfoTable/OpenOrderTable.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Col, Row } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nconst CancelButton = styled(Button)`\n  color: rgba(241, 241, 242, 1);\n  // border: 1px solid rgba(194, 0, 251, 0.1);\n  border: 1px solid #C200FB;\n  border-radius: 4px;\n  width: 65px;\n  height: 20px;\n  font-size: 10;\n  padding: 0;\n  margin: 0;\n`;\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter\n}) {\n  let {\n    wallet\n  } = useWallet();\n  let connection = useSendConnection();\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order === null || order === void 0 ? void 0 : order.orderId);\n\n    try {\n      if (wallet) {\n        await cancelOrder({\n          order,\n          market: order.market,\n          connection,\n          wallet\n        });\n      } else {\n        throw Error('Error cancelling order');\n      }\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error'\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const dataSource = (openOrders || []).map(order => ({ ...order,\n    key: order.orderId\n  }));\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      fontSize: 14,\n      color: 'rgba(241, 241, 242, 0.5)',\n      paddingBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Market\"), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Side\"), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 350,\n      overflowX: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, dataSource.map(({\n    marketName,\n    side,\n    size,\n    price,\n    orderId\n  }, i) => /*#__PURE__*/React.createElement(Row, {\n    key: i,\n    style: {\n      fontSize: 14,\n      color: 'rgba(241, 241, 242, 1)',\n      paddingBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, marketName), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'right',\n      color: 'rgba(90, 196, 190, 1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, side), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'right',\n      color: 'rgba(90, 196, 190, 1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, size), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, price), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CancelButton, {\n    onClick: () => cancel(dataSource[i]),\n    loading: cancelId + '' === orderId + '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))))));\n}","map":{"version":3,"sources":["/home/dev/Code/dex-ui/src/components/UserInfoTable/OpenOrderTable.tsx"],"names":["React","useState","styled","Button","Col","Row","cancelOrder","useWallet","useSendConnection","notify","CancelButton","OpenOrderTable","openOrders","onCancelSuccess","pageSize","loading","marketFilter","wallet","connection","cancelId","setCancelId","cancel","order","orderId","market","Error","e","message","description","type","dataSource","map","key","fontSize","color","paddingBottom","textAlign","height","overflowX","marketName","side","size","price","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { cancelOrder } from '../../utils/send';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { notify } from '../../utils/notifications';\r\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: rgba(241, 241, 242, 1);\r\n  // border: 1px solid rgba(194, 0, 251, 0.1);\r\n  border: 1px solid #C200FB;\r\n  border-radius: 4px;\r\n  width: 65px;\r\n  height: 20px;\r\n  font-size: 10;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport default function OpenOrderTable({\r\n  openOrders,\r\n  onCancelSuccess,\r\n  pageSize,\r\n  loading,\r\n  marketFilter,\r\n}: {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  onCancelSuccess?: () => void;\r\n  pageSize?: number;\r\n  loading?: boolean;\r\n  marketFilter?: boolean;\r\n}) {\r\n  let { wallet } = useWallet();\r\n  let connection = useSendConnection();\r\n\r\n  const [cancelId, setCancelId] = useState(null);\r\n\r\n  async function cancel(order) {\r\n    setCancelId(order?.orderId);\r\n    try {\r\n      if (wallet) {\r\n      await cancelOrder({\r\n        order,\r\n        market: order.market,\r\n        connection,\r\n        wallet,\r\n      });\r\n    } else {\r\n      throw Error('Error cancelling order')\r\n    }\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error cancelling order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } finally {\r\n      setCancelId(null);\r\n    }\r\n    onCancelSuccess && onCancelSuccess();\r\n  }\r\n\r\n  const dataSource = (openOrders || []).map((order) => ({\r\n    ...order,\r\n    key: order.orderId,\r\n  }));\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Row style={{ fontSize: 14, color: 'rgba(241, 241, 242, 0.5)', paddingBottom: 16 }}>\r\n          <Col span={5} style={{ textAlign: 'left' }}>Market</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Side</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Size</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Price</Col>\r\n          <Col span={4} style={{ textAlign: 'right' }}> </Col>\r\n        </Row>\r\n        <div style={{ height: 350, overflowX: 'hidden' }}>\r\n          {dataSource.map(({marketName, side, size, price, orderId }, i) => (\r\n            <Row key={i} style={{ fontSize: 14, color: 'rgba(241, 241, 242, 1)', paddingBottom: 16 }}>\r\n              <Col span={5} style={{ textAlign: 'left' }}>{marketName}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{side}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{size}</Col>\r\n              <Col span={5} style={{ textAlign: 'right' }}>{price}</Col>\r\n              <Col span={4} style={{ textAlign: 'right' }}>\r\n                <CancelButton\r\n                  onClick={() => cancel(dataSource[i])}\r\n                  loading={cancelId + '' === orderId + ''}\r\n                >\r\n                  Cancel\r\n                </CancelButton>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n        {/*<DataTable*/}\r\n        {/*  emptyLabel=\"No open orders\"*/}\r\n        {/*  dataSource={dataSource}*/}\r\n        {/*  columns={columns}*/}\r\n        {/*  pagination={true}*/}\r\n        {/*  pageSize={pageSize ? pageSize : 5}*/}\r\n        {/*  loading={loading !== undefined && loading}*/}\r\n        {/*/>*/}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}