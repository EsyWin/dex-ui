{"ast":null,"code":"var _jsxFileName = \"/home/dev/Code/dex-ui/src/components/TradeForm.tsx\";\nimport { Button, Col, Input, Row, Select, Slider, Switch } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useFeeDiscountKeys, useLocallyStoredFeeDiscountKey, useMarkPrice, useMarket, useSelectedBaseCurrencyAccount, useSelectedBaseCurrencyBalances, useSelectedOpenOrdersAccount, useSelectedQuoteCurrencyAccount, useSelectedQuoteCurrencyBalances } from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport { notify } from '../utils/notifications';\nimport { refreshCache } from '../utils/fetch-loop';\nimport styled from 'styled-components';\nimport tuple from 'immutable-tuple';\nimport { useSendConnection } from '../utils/connection';\nimport { useWallet } from '../utils/wallet';\nimport { floorToDecimal, getDecimalCount, roundToDecimal } from '../utils/utils';\nimport { getUnixTs, placeOrder } from '../utils/send';\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%'\n};\nexport default function TradeForm({\n  style,\n  setChangeOrderRef\n}) {\n  const [side, setSide] = useState('buy');\n  const {\n    baseCurrency,\n    quoteCurrency,\n    market\n  } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const {\n    wallet,\n    connected\n  } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey\n  } = useLocallyStoredFeeDiscountKey();\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(undefined);\n  const [quoteSize, setQuoteSize] = useState(undefined);\n  const [price, setPrice] = useState(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n  const availableQuote = openOrdersAccount && market ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree) : 0;\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount = (market === null || market === void 0 ? void 0 : market.minOrderSize) && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = (market === null || market === void 0 ? void 0 : market.tickSize) && getDecimalCount(market.tickSize);\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n  useEffect(() => {\n    updateSizeFraction(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n  const walletPubkey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !wallet.publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await (market === null || market === void 0 ? void 0 : market.findOpenOrdersAccountsForOwner(sendConnection, wallet.publicKey));\n        await (market === null || market === void 0 ? void 0 : market.findBestFeeDiscountKey(sendConnection, wallet.publicKey));\n        const endTime = getUnixTs();\n        console.log(`Finished refreshing accounts for ${market.address} after ${endTime - startTime}`);\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, walletPubkey]); // useInterval(() => {\n  //   const autoSettle = async () => {\n  //     if (!wallet || !market || !openOrdersAccount || !baseCurrencyAccount || !quoteCurrencyAccount || \n  //       openOrdersAccount?.baseTokenFree.toNumber() <= 0 || openOrdersAccount.quoteTokenFree.toNumber() <= 0) {\n  //       return;\n  //     }\n  //     try {\n  //       // settle funds into selected token wallets\n  //       await settleFunds({\n  //         market,\n  //         openOrders: openOrdersAccount,\n  //         connection: sendConnection,\n  //         wallet,\n  //         baseCurrencyAccount,\n  //         quoteCurrencyAccount\n  //       });\n  //     } catch (e) {\n  //       console.log('Error auto settling funds: ' + e.message);\n  //     }\n  //   };\n  //   (\n  //     connected &&\n  //     wallet?.autoApprove &&\n  //     autoSettleEnabled &&\n  //     autoSettle()\n  //   );\n  // }, 10000);\n\n  const onSetBaseSize = baseSize => {\n    setBaseSize(baseSize);\n\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n\n    let usePrice = price || markPrice;\n\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize = baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = quoteSize => {\n    setQuoteSize(quoteSize);\n\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n\n    let usePrice = price || markPrice;\n\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize || 0) / maxSize * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = value => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount ? markPrice.toFixed(priceDecimalCount) : markPrice;\n      setPrice(typeof formattedMarkPrice === 'number' ? formattedMarkPrice : parseFloat(formattedMarkPrice));\n    }\n\n    let newSize;\n\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = quoteBalance / (price || markPrice || 1) * value / 100;\n      }\n    } else {\n      newSize = baseBalance * value / 100;\n    } // round down to minOrderSize increment\n\n\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = checked => {\n    if (checked) {\n      setIoc(false);\n    }\n\n    setPostOnly(checked);\n  };\n\n  const iocOnChange = checked => {\n    if (checked) {\n      setPostOnly(false);\n    }\n\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error'\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error'\n      });\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      if (wallet) {\n        await placeOrder({\n          side,\n          price,\n          size: baseSize,\n          orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n          market,\n          connection: sendConnection,\n          wallet,\n          baseCurrencyAccount: baseCurrencyAccount === null || baseCurrencyAccount === void 0 ? void 0 : baseCurrencyAccount.pubkey,\n          quoteCurrencyAccount: quoteCurrencyAccount === null || quoteCurrencyAccount === void 0 ? void 0 : quoteCurrencyAccount.pubkey,\n          feeDiscountPubkey: feeDiscountKey\n        });\n        refreshCache(tuple('getTokenAccounts', wallet, connected));\n        setPrice(undefined);\n        onSetBaseSize(undefined);\n      } else {\n        throw Error('Error placing order');\n      }\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error'\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  } // @ts-ignore\n\n\n  return /*#__PURE__*/React.createElement(FloatingElement, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      ...style\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    onClick: () => setSide('buy'),\n    style: {\n      height: 42,\n      width: '50%',\n      textAlign: 'center',\n      border: 'transparent',\n      borderBottom: side === 'buy' ? '2px solid #5AC4BE' : '2px solid #1C274F',\n      background: 'transparent',\n      fontSize: 14,\n      fontStyle: 'normal',\n      fontWeight: 600,\n      color: side === 'buy' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n      padding: '12px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, \"BUY\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    onClick: () => setSide('sell'),\n    style: {\n      height: 42,\n      width: '50%',\n      textAlign: 'center',\n      border: 'transparent',\n      borderBottom: side === 'sell' ? '2px solid #5AC4BE' : '2px solid #1C274F',\n      background: 'transparent',\n      fontSize: 14,\n      fontStyle: 'normal',\n      fontWeight: 600,\n      color: side === 'sell' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n      padding: '12px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, \"SELL\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '24px 24px 15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"Limit Order\",\n    bordered: false,\n    style: {\n      width: '100%',\n      height: 47,\n      left: 0,\n      top: 0,\n      background: '#1C274F',\n      borderRadius: 4,\n      paddingTop: 5,\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"Limit Order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, \"Limit Order\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      paddingBottom: 8,\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }, \"Limit price\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    bordered: false,\n    style: {\n      textAlign: 'right',\n      paddingBottom: 8,\n      height: 47,\n      background: '#1C274F',\n      borderRadius: 4\n    },\n    suffix: /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 10,\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }, quoteCurrency),\n    value: price,\n    step: (market === null || market === void 0 ? void 0 : market.tickSize) || 1,\n    onChange: e => setPrice(parseFloat(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      paddingBottom: 8,\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    bordered: false,\n    style: {\n      textAlign: 'right',\n      paddingBottom: 8,\n      height: 47,\n      background: '#1C274F',\n      borderRadius: 4\n    },\n    suffix: /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 10,\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, baseCurrency),\n    value: baseSize,\n    step: (market === null || market === void 0 ? void 0 : market.tickSize) || 1,\n    onChange: e => onSetBaseSize(parseFloat(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      paddingBottom: 8,\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    bordered: false,\n    style: {\n      textAlign: 'right',\n      paddingBottom: 8,\n      height: 47,\n      background: '#1C274F',\n      borderRadius: 4\n    },\n    suffix: /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 10,\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, quoteCurrency),\n    value: quoteSize,\n    step: (market === null || market === void 0 ? void 0 : market.tickSize) || 1,\n    onChange: e => onSetQuoteSize(parseFloat(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    style: {\n      width: '80%'\n    },\n    value: sizeFraction,\n    tipFormatter: value => `${value}%`,\n    marks: sliderMarks,\n    onChange: onSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    style: {\n      paddingTop: 10,\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    size: \"small\",\n    checked: postOnly,\n    style: {\n      width: 32\n    },\n    onChange: postOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      fontSize: 10,\n      color: '#BEBEBE',\n      paddingLeft: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, \"POST\")), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    style: {\n      paddingTop: 10,\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    size: \"small\",\n    checked: ioc,\n    style: {\n      width: 32\n    },\n    onChange: iocOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      fontSize: 10,\n      color: '#BEBEBE',\n      paddingLeft: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  }, \"IOC\"))), /*#__PURE__*/React.createElement(BuyButton, {\n    disabled: !price || !baseSize,\n    onClick: onSubmit,\n    block: true,\n    type: \"primary\",\n    size: \"large\",\n    loading: submitting,\n    style: {\n      marginTop: 20,\n      height: 41,\n      background: 'rgba(90, 196, 190, 0.1)',\n      border: '1px solid #5AC4BE',\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, \"LIMIT \", side.toUpperCase(), \" \", baseCurrency))));\n}","map":{"version":3,"sources":["/home/dev/Code/dex-ui/src/components/TradeForm.tsx"],"names":["Button","Col","Input","Row","Select","Slider","Switch","React","useEffect","useState","useFeeDiscountKeys","useLocallyStoredFeeDiscountKey","useMarkPrice","useMarket","useSelectedBaseCurrencyAccount","useSelectedBaseCurrencyBalances","useSelectedOpenOrdersAccount","useSelectedQuoteCurrencyAccount","useSelectedQuoteCurrencyBalances","FloatingElement","notify","refreshCache","styled","tuple","useSendConnection","useWallet","floorToDecimal","getDecimalCount","roundToDecimal","getUnixTs","placeOrder","BuyButton","sliderMarks","TradeForm","style","setChangeOrderRef","side","setSide","baseCurrency","quoteCurrency","market","baseCurrencyBalances","quoteCurrencyBalances","baseCurrencyAccount","quoteCurrencyAccount","openOrdersAccount","wallet","connected","sendConnection","markPrice","storedFeeDiscountKey","feeDiscountKey","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","undefined","quoteSize","setQuoteSize","price","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","availableQuote","quoteSplSizeToNumber","quoteTokenFree","quoteBalance","baseBalance","sizeDecimalCount","minOrderSize","priceDecimalCount","tickSize","doChangeOrder","onSliderChange","updateSizeFraction","walletPubkey","publicKey","warmUpCache","console","log","startTime","address","findOpenOrdersAccountsForOwner","findBestFeeDiscountKey","endTime","e","id","setInterval","clearInterval","onSetBaseSize","usePrice","rawQuoteSize","onSetQuoteSize","rawBaseSize","size","formattedSize","formattedPrice","rawMaxSize","maxSize","Math","min","value","formattedMarkPrice","toFixed","parseFloat","newSize","formatted","postOnChange","checked","iocOnChange","onSubmit","warn","message","type","orderType","connection","pubkey","feeDiscountPubkey","Error","description","display","flexDirection","flex","height","width","textAlign","border","borderBottom","background","fontSize","fontStyle","fontWeight","color","padding","left","top","borderRadius","paddingTop","marginTop","paddingBottom","opacity","target","paddingLeft","toUpperCase"],"mappings":"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","sourcesContent":["import { Button, Col, Input, Row, Select, Slider, Switch } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  useFeeDiscountKeys,\r\n  useLocallyStoredFeeDiscountKey,\r\n  useMarkPrice,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedBaseCurrencyBalances,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useSelectedQuoteCurrencyBalances,\r\n} from '../utils/markets';\r\n\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\r\nimport { notify } from '../utils/notifications';\r\nimport { refreshCache } from '../utils/fetch-loop';\r\nimport styled from 'styled-components';\r\nimport tuple from 'immutable-tuple';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { useWallet } from '../utils/wallet';\r\nimport {floorToDecimal, getDecimalCount, roundToDecimal,} from '../utils/utils';\r\nimport {getUnixTs, placeOrder} from '../utils/send';\r\n\r\nconst BuyButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nconst sliderMarks = {\r\n  0: '0%',\r\n  25: '25%',\r\n  50: '50%',\r\n  75: '75%',\r\n  100: '100%',\r\n};\r\n\r\nexport default function TradeForm({\r\n  style,\r\n  setChangeOrderRef,\r\n}: {\r\n  style?: any;\r\n  setChangeOrderRef?: (\r\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\r\n  ) => void;\r\n}) {\r\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const { wallet, connected } = useWallet();\r\n  const sendConnection = useSendConnection();\r\n  const markPrice = useMarkPrice();\r\n  useFeeDiscountKeys();\r\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n\r\n  const [postOnly, setPostOnly] = useState(false);\r\n  const [ioc, setIoc] = useState(false);\r\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\r\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\r\n  const [price, setPrice] = useState<number | undefined>(undefined);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sizeFraction, setSizeFraction] = useState(0);\r\n\r\n  const availableQuote =\r\n    openOrdersAccount && market\r\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\r\n      : 0;\r\n\r\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\r\n  let baseBalance = baseCurrencyBalances || 0;\r\n  let sizeDecimalCount =\r\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\r\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\r\n\r\n  useEffect(() => {\r\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setChangeOrderRef]);\r\n\r\n  useEffect(() => {\r\n    baseSize && price && onSliderChange(sizeFraction);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [side]);\r\n\r\n  useEffect(() => {\r\n    updateSizeFraction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [price, baseSize]);\r\n\r\n  const walletPubkey =  wallet?.publicKey\r\n  useEffect(() => {\r\n    const warmUpCache = async () => {\r\n      try {\r\n        if (!wallet || !wallet.publicKey || !market) {\r\n          console.log(`Skipping refreshing accounts`);\r\n          return;\r\n        }\r\n        const startTime = getUnixTs();\r\n        console.log(`Refreshing accounts for ${market.address}`);\r\n        await market?.findOpenOrdersAccountsForOwner(\r\n          sendConnection,\r\n          wallet.publicKey,\r\n        );\r\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\r\n        const endTime = getUnixTs();\r\n        console.log(\r\n          `Finished refreshing accounts for ${market.address} after ${\r\n            endTime - startTime\r\n          }`,\r\n        );\r\n      } catch (e) {\r\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\r\n      }\r\n    };\r\n    warmUpCache();\r\n    const id = setInterval(warmUpCache, 30_000);\r\n    return () => clearInterval(id);\r\n  }, [market, sendConnection, wallet, walletPubkey]);\r\n\r\n  \r\n  // useInterval(() => {\r\n  //   const autoSettle = async () => {\r\n  //     if (!wallet || !market || !openOrdersAccount || !baseCurrencyAccount || !quoteCurrencyAccount || \r\n  //       openOrdersAccount?.baseTokenFree.toNumber() <= 0 || openOrdersAccount.quoteTokenFree.toNumber() <= 0) {\r\n  //       return;\r\n  //     }\r\n  //     try {\r\n  //       // settle funds into selected token wallets\r\n  //       await settleFunds({\r\n  //         market,\r\n  //         openOrders: openOrdersAccount,\r\n  //         connection: sendConnection,\r\n  //         wallet,\r\n  //         baseCurrencyAccount,\r\n  //         quoteCurrencyAccount\r\n  //       });\r\n  //     } catch (e) {\r\n  //       console.log('Error auto settling funds: ' + e.message);\r\n  //     }\r\n  //   };\r\n  //   (\r\n  //     connected &&\r\n  //     wallet?.autoApprove &&\r\n  //     autoSettleEnabled &&\r\n  //     autoSettle()\r\n  //   );\r\n  // }, 10000);\r\n\r\n  const onSetBaseSize = (baseSize: number | undefined) => {\r\n    setBaseSize(baseSize);\r\n    if (!baseSize) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    const rawQuoteSize = baseSize * usePrice;\r\n    const quoteSize =\r\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\r\n    setQuoteSize(quoteSize);\r\n  };\r\n\r\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\r\n    setQuoteSize(quoteSize);\r\n    if (!quoteSize) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    const rawBaseSize = quoteSize / usePrice;\r\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\r\n    setBaseSize(baseSize);\r\n  };\r\n\r\n  const doChangeOrder = ({\r\n    size,\r\n    price,\r\n  }: {\r\n    size?: number;\r\n    price?: number;\r\n  }) => {\r\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\r\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\r\n    formattedSize && onSetBaseSize(formattedSize);\r\n    formattedPrice && setPrice(formattedPrice);\r\n  };\r\n\r\n  const updateSizeFraction = () => {\r\n    const rawMaxSize =\r\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\r\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\r\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\r\n    setSizeFraction(sizeFraction);\r\n  };\r\n\r\n  const onSliderChange = (value) => {\r\n    if (!price && markPrice) {\r\n      let formattedMarkPrice: number | string = priceDecimalCount\r\n        ? markPrice.toFixed(priceDecimalCount)\r\n        : markPrice;\r\n      setPrice(\r\n        typeof formattedMarkPrice === 'number'\r\n          ? formattedMarkPrice\r\n          : parseFloat(formattedMarkPrice),\r\n      );\r\n    }\r\n\r\n    let newSize;\r\n    if (side === 'buy') {\r\n      if (price || markPrice) {\r\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\r\n      }\r\n    } else {\r\n      newSize = (baseBalance * value) / 100;\r\n    }\r\n\r\n    // round down to minOrderSize increment\r\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\r\n\r\n    onSetBaseSize(formatted);\r\n  };\r\n\r\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setIoc(false);\r\n    }\r\n    setPostOnly(checked);\r\n  };\r\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setPostOnly(false);\r\n    }\r\n    setIoc(checked);\r\n  };\r\n\r\n  async function onSubmit() {\r\n    if (!price) {\r\n      console.warn('Missing price');\r\n      notify({\r\n        message: 'Missing price',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else if (!baseSize) {\r\n      console.warn('Missing size');\r\n      notify({\r\n        message: 'Missing size',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      if (wallet) {\r\n      await placeOrder({\r\n        side,\r\n        price,\r\n        size: baseSize,\r\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n        feeDiscountPubkey: feeDiscountKey\r\n      });\r\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\r\n      setPrice(undefined);\r\n      onSetBaseSize(undefined);\r\n    } else {\r\n      throw Error('Error placing order')\r\n    }\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  // @ts-ignore\r\n  return (\r\n    <FloatingElement\r\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        <Row>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('buy')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: side === 'buy' ? '2px solid #5AC4BE' : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'buy' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0'\r\n            }}\r\n          >\r\n            BUY\r\n          </Col>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('sell')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom: side === 'sell' ? '2px solid #5AC4BE' : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'sell' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0'\r\n            }}\r\n          >\r\n            SELL\r\n          </Col>\r\n        </Row>\r\n        <div\r\n          style={{\r\n            padding: '24px 24px 15px',\r\n          }}\r\n        >\r\n          <Select\r\n            defaultValue=\"Limit Order\"\r\n            bordered={false}\r\n            style={{\r\n              width: '100%',\r\n              height: 47,\r\n              left: 0,\r\n              top: 0,\r\n              background: '#1C274F',\r\n              borderRadius: 4,\r\n              paddingTop: 5,\r\n              fontSize: 14\r\n            }}\r\n          >\r\n            <Select.Option value=\"Limit Order\">Limit Order</Select.Option>\r\n            {/* <Select.Option value=\"Market Order\">Market Order</Select.Option> */}\r\n          </Select>\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Limit price</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n              }\r\n              value={price}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => setPrice(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Amount</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\r\n              }\r\n              value={baseSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetBaseSize(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25}}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Total</div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n              }\r\n              value={quoteSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetQuoteSize(parseFloat( e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <Row style={{ paddingTop: 8}}>\r\n            <Col span={12}>\r\n              <Slider\r\n                style={{ width: '80%' }}\r\n                value={sizeFraction}\r\n                tipFormatter={(value) => `${value}%`}\r\n                marks={sliderMarks}\r\n                onChange={onSliderChange}\r\n              />\r\n            </Col>\r\n            <Col span={6} style={{\r\n              paddingTop: 10,\r\n              paddingLeft: 10,\r\n            }}>\r\n              <Switch\r\n                size=\"small\"\r\n                checked={postOnly}\r\n                style={{ width: 32}}\r\n                onChange={postOnChange}\r\n              />\r\n                <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>POST</div>\r\n            </Col>\r\n            <Col span={6} style={{\r\n              paddingTop: 10,\r\n              paddingLeft: 10,\r\n            }}>\r\n              <Switch\r\n                size=\"small\"\r\n                checked={ioc}\r\n                style={{ width: 32}}\r\n                onChange={iocOnChange}\r\n              />\r\n              <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>IOC</div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <BuyButton\r\n            disabled={!price || !baseSize}\r\n            onClick={onSubmit}\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={submitting}\r\n            style={{\r\n              marginTop: 20,\r\n              height: 41,\r\n              background: 'rgba(90, 196, 190, 0.1)',\r\n              border: '1px solid #5AC4BE',\r\n              borderRadius: 4,\r\n            }}\r\n          >\r\n            LIMIT {side.toUpperCase()} {baseCurrency}\r\n          </BuyButton>\r\n        </div>\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}